ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\cc92Bnqy.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"USBFS_1_episr.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.USBFS_1_EP_1_ISR,"ax",%progbits
  19              		.align	2
  20              		.global	USBFS_1_EP_1_ISR
  21              		.thumb
  22              		.thumb_func
  23              		.type	USBFS_1_EP_1_ISR, %function
  24              	USBFS_1_EP_1_ISR:
  25              	.LFB0:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\USBFS_1_episr.c"
   1:.\Generated_Source\PSoC5/USBFS_1_episr.c **** /***************************************************************************//**
   2:.\Generated_Source\PSoC5/USBFS_1_episr.c **** * \file USBFS_1_episr.c
   3:.\Generated_Source\PSoC5/USBFS_1_episr.c **** * \version 3.0
   4:.\Generated_Source\PSoC5/USBFS_1_episr.c **** *
   5:.\Generated_Source\PSoC5/USBFS_1_episr.c **** * \brief
   6:.\Generated_Source\PSoC5/USBFS_1_episr.c **** *  This file contains the Data endpoint Interrupt Service Routines.
   7:.\Generated_Source\PSoC5/USBFS_1_episr.c **** *
   8:.\Generated_Source\PSoC5/USBFS_1_episr.c **** ********************************************************************************
   9:.\Generated_Source\PSoC5/USBFS_1_episr.c **** * \copyright
  10:.\Generated_Source\PSoC5/USBFS_1_episr.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  11:.\Generated_Source\PSoC5/USBFS_1_episr.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:.\Generated_Source\PSoC5/USBFS_1_episr.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:.\Generated_Source\PSoC5/USBFS_1_episr.c **** * the software package with which this file was provided.
  14:.\Generated_Source\PSoC5/USBFS_1_episr.c **** *******************************************************************************/
  15:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
  16:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #include "USBFS_1_pvt.h"
  17:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #include "USBFS_1_cydmac.h"
  18:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #include "cyapicallbacks.h"
  19:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
  20:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
  21:.\Generated_Source\PSoC5/USBFS_1_episr.c **** /***************************************
  22:.\Generated_Source\PSoC5/USBFS_1_episr.c **** * Custom Declarations
  23:.\Generated_Source\PSoC5/USBFS_1_episr.c **** ***************************************/
  24:.\Generated_Source\PSoC5/USBFS_1_episr.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  25:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
  26:.\Generated_Source\PSoC5/USBFS_1_episr.c **** /* `#END` */
  27:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
  28:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
  29:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_EP1_ISR_ACTIVE)
  30:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     /******************************************************************************
  31:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_EP_1_ISR
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\cc92Bnqy.s 			page 2


  32:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     ***************************************************************************//**
  33:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
  34:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Endpoint 1 Interrupt Service Routine
  35:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
  36:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     ******************************************************************************/
  37:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_EP_1_ISR)
  38:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     {
  27              		.loc 1 38 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  39:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
  40:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_1_ISR_ENTRY_CALLBACK
  41:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_1_ISR_EntryCallback();
  42:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_1_ISR_ENTRY_CALLBACK) */
  43:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
  44:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP1_USER_CODE` Place your code here */
  45:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
  46:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
  47:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
  48:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
  49:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
  50:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         {
  51:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             uint8 intEn = EA;
  52:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
  53:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
  54:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     
  55:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieEpInterruptSource(USBFS_1_SIE_INT_EP1_INTR);
  32              		.loc 1 55 0
  33 0000 0A4A     		ldr	r2, .L3
  34 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  35 0004 03F0FE03 		and	r3, r3, #254
  36 0008 1370     		strb	r3, [r2]
  56:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             
  57:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
  58:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
  59:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
  60:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         */
  61:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)
  62:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         if (0u != (USBFS_1_EP[USBFS_1_EP1].addr & USBFS_1_DIR_IN))
  63:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
  64:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         {
  65:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
  66:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             (void) USBFS_1_SIE_EP_BASE.sieEp[USBFS_1_EP1].epCr0;
  37              		.loc 1 66 0
  38 000a 094B     		ldr	r3, .L3+4
  39 000c 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
  67:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             
  68:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
  69:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_GET_EP_TYPE(USBFS_1_EP1) != USBFS_1_EP_TYPE_ISOC)
  40              		.loc 1 69 0
  41 000e 094B     		ldr	r3, .L3+8
  42 0010 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
  43 0012 03F00303 		and	r3, r3, #3
  44 0016 012B     		cmp	r3, #1
  45 0018 04D0     		beq	.L2
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\cc92Bnqy.s 			page 3


  70:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
  71:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_EP[USBFS_1_EP1].epToggle ^= USBFS_1_EPX_CNT_DATA_TOGGLE;
  46              		.loc 1 71 0
  47 001a 064A     		ldr	r2, .L3+8
  48 001c D37B     		ldrb	r3, [r2, #15]	@ zero_extendqisi2
  49 001e 83F08003 		eor	r3, r3, #128
  50 0022 D373     		strb	r3, [r2, #15]
  51              	.L2:
  72:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
  73:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
  74:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
  75:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
  76:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * Because last chunk of data is being copied.
  77:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
  78:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
  79:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             */
  80:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_EP[USBFS_1_EP1].apiEpState = USBFS_1_EVENT_PENDING;
  52              		.loc 1 80 0
  53 0024 0122     		movs	r2, #1
  54 0026 034B     		ldr	r3, .L3+8
  55 0028 5A73     		strb	r2, [r3, #13]
  56 002a 7047     		bx	lr
  57              	.L4:
  58              		.align	2
  59              	.L3:
  60 002c 0B600040 		.word	1073766411
  61 0030 FC5F0040 		.word	1073766396
  62 0034 00000000 		.word	USBFS_1_EP
  63              		.cfi_endproc
  64              	.LFE0:
  65              		.size	USBFS_1_EP_1_ISR, .-USBFS_1_EP_1_ISR
  66              		.section	.text.USBFS_1_BUS_RESET_ISR,"ax",%progbits
  67              		.align	2
  68              		.global	USBFS_1_BUS_RESET_ISR
  69              		.thumb
  70              		.thumb_func
  71              		.type	USBFS_1_BUS_RESET_ISR, %function
  72              	USBFS_1_BUS_RESET_ISR:
  73              	.LFB1:
  81:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         }
  82:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
  83:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO))
  84:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
  85:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
  86:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_midi_out_ep == USBFS_1_EP1)
  87:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
  88:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_MIDI_OUT_Service();
  89:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
  90:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         #endif /* (USBFS_1_ISR_SERVICE_MIDI_OUT) */
  91:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)) */
  92:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     
  93:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP1_END_USER_CODE` Place your code here */
  94:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
  95:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
  96:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
  97:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_1_ISR_EXIT_CALLBACK
  98:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_1_ISR_ExitCallback();
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\cc92Bnqy.s 			page 4


  99:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_1_ISR_EXIT_CALLBACK) */
 100:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 101:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 102:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 103:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         
 104:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 105:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 106:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 107:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     }
 108:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 109:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_EP1_ISR_ACTIVE) */
 110:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 111:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 112:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_EP2_ISR_ACTIVE)
 113:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     /*******************************************************************************
 114:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_EP_2_ISR
 115:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     ****************************************************************************//**
 116:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 117:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Endpoint 2 Interrupt Service Routine.
 118:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 119:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *******************************************************************************/
 120:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_EP_2_ISR)
 121:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     {
 122:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_2_ISR_ENTRY_CALLBACK
 123:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_2_ISR_EntryCallback();
 124:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_2_ISR_ENTRY_CALLBACK) */
 125:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 126:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP2_USER_CODE` Place your code here */
 127:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 128:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 129:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 130:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 131:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 132:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 133:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             uint8 intEn = EA;
 134:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 135:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 136:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 137:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieEpInterruptSource(USBFS_1_SIE_INT_EP2_INTR);
 138:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 139:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 140:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 141:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 142:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         */
 143:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)
 144:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         if (0u != (USBFS_1_EP[USBFS_1_EP2].addr & USBFS_1_DIR_IN))
 145:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 146:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         {            
 147:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 148:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             (void) USBFS_1_SIE_EP_BASE.sieEp[USBFS_1_EP2].epCr0;
 149:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             
 150:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 151:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_GET_EP_TYPE(USBFS_1_EP2) != USBFS_1_EP_TYPE_ISOC)
 152:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 153:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_EP[USBFS_1_EP2].epToggle ^= USBFS_1_EPX_CNT_DATA_TOGGLE;
 154:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 155:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\cc92Bnqy.s 			page 5


 156:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 157:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 158:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * Because last chunk of data is being copied.
 159:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 160:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 161:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             */
 162:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_EP[USBFS_1_EP2].apiEpState = USBFS_1_EVENT_PENDING;
 163:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 164:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 165:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO))
 166:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 167:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 168:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_midi_out_ep == USBFS_1_EP2)
 169:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 170:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_MIDI_OUT_Service();
 171:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 172:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         #endif /* (USBFS_1_ISR_SERVICE_MIDI_OUT) */
 173:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)) */        
 174:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     
 175:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP2_END_USER_CODE` Place your code here */
 176:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 177:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 178:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 179:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_2_ISR_EXIT_CALLBACK
 180:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_2_ISR_ExitCallback();
 181:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_2_ISR_EXIT_CALLBACK) */
 182:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 183:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 184:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 185:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         
 186:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 187:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 188:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 189:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     }
 190:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_EP2_ISR_ACTIVE) */
 191:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 192:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 193:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_EP3_ISR_ACTIVE)
 194:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     /*******************************************************************************
 195:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_EP_3_ISR
 196:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     ****************************************************************************//**
 197:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 198:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Endpoint 3 Interrupt Service Routine.
 199:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 200:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *******************************************************************************/
 201:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_EP_3_ISR)
 202:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     {
 203:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_3_ISR_ENTRY_CALLBACK
 204:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_3_ISR_EntryCallback();
 205:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_3_ISR_ENTRY_CALLBACK) */
 206:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 207:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP3_USER_CODE` Place your code here */
 208:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 209:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 210:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 211:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 212:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\cc92Bnqy.s 			page 6


 213:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 214:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             uint8 intEn = EA;
 215:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 216:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 217:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 218:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieEpInterruptSource(USBFS_1_SIE_INT_EP3_INTR);    
 219:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 220:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 221:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 222:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 223:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         */
 224:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)
 225:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         if (0u != (USBFS_1_EP[USBFS_1_EP3].addr & USBFS_1_DIR_IN))
 226:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 227:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         {            
 228:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 229:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             (void) USBFS_1_SIE_EP_BASE.sieEp[USBFS_1_EP3].epCr0;
 230:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 231:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 232:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_GET_EP_TYPE(USBFS_1_EP3) != USBFS_1_EP_TYPE_ISOC)
 233:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 234:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_EP[USBFS_1_EP3].epToggle ^= USBFS_1_EPX_CNT_DATA_TOGGLE;
 235:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 236:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 237:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 238:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 239:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * Because last chunk of data is being copied.
 240:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 241:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 242:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             */
 243:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_EP[USBFS_1_EP3].apiEpState = USBFS_1_EVENT_PENDING;
 244:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 245:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 246:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO))
 247:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 248:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 249:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_midi_out_ep == USBFS_1_EP3)
 250:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 251:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_MIDI_OUT_Service();
 252:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 253:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         #endif /* (USBFS_1_ISR_SERVICE_MIDI_OUT) */
 254:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)) */        
 255:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 256:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP3_END_USER_CODE` Place your code here */
 257:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 258:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 259:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 260:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_3_ISR_EXIT_CALLBACK
 261:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_3_ISR_ExitCallback();
 262:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_3_ISR_EXIT_CALLBACK) */
 263:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 264:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 265:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 266:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         
 267:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 268:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 269:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\cc92Bnqy.s 			page 7


 270:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     }
 271:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_EP3_ISR_ACTIVE) */
 272:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 273:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 274:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_EP4_ISR_ACTIVE)
 275:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     /*******************************************************************************
 276:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_EP_4_ISR
 277:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     ****************************************************************************//**
 278:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 279:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Endpoint 4 Interrupt Service Routine.
 280:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 281:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *******************************************************************************/
 282:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_EP_4_ISR)
 283:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     {
 284:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_4_ISR_ENTRY_CALLBACK
 285:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_4_ISR_EntryCallback();
 286:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_4_ISR_ENTRY_CALLBACK) */
 287:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 288:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP4_USER_CODE` Place your code here */
 289:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 290:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 291:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 292:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 293:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 294:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 295:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             uint8 intEn = EA;
 296:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 297:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 298:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 299:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieEpInterruptSource(USBFS_1_SIE_INT_EP4_INTR);
 300:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         
 301:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 302:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 303:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 304:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         */
 305:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)
 306:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         if (0u != (USBFS_1_EP[USBFS_1_EP4].addr & USBFS_1_DIR_IN))
 307:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 308:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 309:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 310:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             (void) USBFS_1_SIE_EP_BASE.sieEp[USBFS_1_EP4].epCr0;
 311:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 312:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 313:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_GET_EP_TYPE(USBFS_1_EP4) != USBFS_1_EP_TYPE_ISOC)
 314:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 315:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_EP[USBFS_1_EP4].epToggle ^= USBFS_1_EPX_CNT_DATA_TOGGLE;
 316:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 317:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 318:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 319:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 320:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * Because last chunk of data is being copied.
 321:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 322:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 323:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             */
 324:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_EP[USBFS_1_EP4].apiEpState = USBFS_1_EVENT_PENDING;
 325:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 326:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\cc92Bnqy.s 			page 8


 327:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO))
 328:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 329:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 330:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if(USBFS_1_midi_out_ep == USBFS_1_EP4)
 331:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 332:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_MIDI_OUT_Service();
 333:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 334:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         #endif /* (USBFS_1_ISR_SERVICE_MIDI_OUT) */
 335:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)) */        
 336:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 337:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP4_END_USER_CODE` Place your code here */
 338:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 339:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 340:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 341:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_4_ISR_EXIT_CALLBACK
 342:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_4_ISR_ExitCallback();
 343:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_4_ISR_EXIT_CALLBACK) */
 344:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 345:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 346:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 347:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         
 348:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 349:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 350:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 351:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     }
 352:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_EP4_ISR_ACTIVE) */
 353:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 354:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 355:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_EP5_ISR_ACTIVE)
 356:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     /*******************************************************************************
 357:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_EP_5_ISR
 358:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     ****************************************************************************//**
 359:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 360:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Endpoint 5 Interrupt Service Routine
 361:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 362:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 363:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *******************************************************************************/
 364:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_EP_5_ISR)
 365:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     {
 366:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_5_ISR_ENTRY_CALLBACK
 367:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_5_ISR_EntryCallback();
 368:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_5_ISR_ENTRY_CALLBACK) */
 369:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 370:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP5_USER_CODE` Place your code here */
 371:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 372:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 373:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 374:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && \
 375:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                  USBFS_1_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 376:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 377:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             uint8 intEn = EA;
 378:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 379:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 380:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 381:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieEpInterruptSource(USBFS_1_SIE_INT_EP5_INTR);
 382:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     
 383:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\cc92Bnqy.s 			page 9


 384:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 385:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 386:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         */
 387:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)
 388:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         if (0u != (USBFS_1_EP[USBFS_1_EP5].addr & USBFS_1_DIR_IN))
 389:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 390:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         {            
 391:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 392:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             (void) USBFS_1_SIE_EP_BASE.sieEp[USBFS_1_EP5].epCr0;
 393:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 394:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 395:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_GET_EP_TYPE(USBFS_1_EP5) != USBFS_1_EP_TYPE_ISOC)
 396:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 397:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_EP[USBFS_1_EP5].epToggle ^= USBFS_1_EPX_CNT_DATA_TOGGLE;
 398:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 399:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 400:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 401:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 402:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * Because last chunk of data is being copied.
 403:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 404:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 405:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             */
 406:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_EP[USBFS_1_EP5].apiEpState = USBFS_1_EVENT_PENDING;
 407:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 408:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 409:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO))        
 410:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 411:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 412:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_midi_out_ep == USBFS_1_EP5)
 413:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 414:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_MIDI_OUT_Service();
 415:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 416:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         #endif /* (USBFS_1_ISR_SERVICE_MIDI_OUT) */
 417:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)) */
 418:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 419:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP5_END_USER_CODE` Place your code here */
 420:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 421:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 422:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 423:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_5_ISR_EXIT_CALLBACK
 424:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_5_ISR_ExitCallback();
 425:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_5_ISR_EXIT_CALLBACK) */
 426:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 427:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 428:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 429:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         
 430:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 431:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 432:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 433:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     }
 434:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_EP5_ISR_ACTIVE) */
 435:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 436:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 437:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_EP6_ISR_ACTIVE)
 438:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     /*******************************************************************************
 439:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_EP_6_ISR
 440:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     ****************************************************************************//**
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\cc92Bnqy.s 			page 10


 441:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 442:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Endpoint 6 Interrupt Service Routine.
 443:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 444:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 445:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *******************************************************************************/
 446:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_EP_6_ISR)
 447:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     {
 448:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_6_ISR_ENTRY_CALLBACK
 449:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_6_ISR_EntryCallback();
 450:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_6_ISR_ENTRY_CALLBACK) */
 451:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 452:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP6_USER_CODE` Place your code here */
 453:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 454:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 455:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 456:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 457:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 458:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 459:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             uint8 intEn = EA;
 460:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 461:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 462:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 463:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieEpInterruptSource(USBFS_1_SIE_INT_EP6_INTR);
 464:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         
 465:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 466:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 467:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 468:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         */
 469:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)
 470:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         if (0u != (USBFS_1_EP[USBFS_1_EP6].addr & USBFS_1_DIR_IN))
 471:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 472:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 473:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 474:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             (void) USBFS_1_SIE_EP_BASE.sieEp[USBFS_1_EP6].epCr0;
 475:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 476:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 477:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_GET_EP_TYPE(USBFS_1_EP6) != USBFS_1_EP_TYPE_ISOC)
 478:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 479:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_EP[USBFS_1_EP6].epToggle ^= USBFS_1_EPX_CNT_DATA_TOGGLE;
 480:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 481:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             
 482:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 483:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 484:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * Because last chunk of data is being copied.
 485:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 486:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 487:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             */
 488:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_EP[USBFS_1_EP6].apiEpState = USBFS_1_EVENT_PENDING;
 489:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 490:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 491:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO))
 492:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 493:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 494:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_midi_out_ep == USBFS_1_EP6)
 495:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 496:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_MIDI_OUT_Service();
 497:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\cc92Bnqy.s 			page 11


 498:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         #endif /* (USBFS_1_ISR_SERVICE_MIDI_OUT) */
 499:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)) */
 500:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 501:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP6_END_USER_CODE` Place your code here */
 502:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 503:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 504:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 505:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_6_ISR_EXIT_CALLBACK
 506:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_6_ISR_ExitCallback();
 507:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_6_ISR_EXIT_CALLBACK) */
 508:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 509:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 510:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 511:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         
 512:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 513:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 514:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 515:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     }
 516:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_EP6_ISR_ACTIVE) */
 517:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 518:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 519:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_EP7_ISR_ACTIVE)
 520:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     /*******************************************************************************
 521:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_EP_7_ISR
 522:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     ****************************************************************************//**
 523:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 524:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Endpoint 7 Interrupt Service Routine.
 525:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 526:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 527:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *******************************************************************************/
 528:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_EP_7_ISR)
 529:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     {
 530:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_7_ISR_ENTRY_CALLBACK
 531:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_7_ISR_EntryCallback();
 532:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_7_ISR_ENTRY_CALLBACK) */
 533:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 534:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP7_USER_CODE` Place your code here */
 535:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 536:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 537:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 538:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 539:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 540:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 541:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             uint8 intEn = EA;
 542:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 543:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 544:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     
 545:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieEpInterruptSource(USBFS_1_SIE_INT_EP7_INTR);
 546:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         
 547:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 548:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 549:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 550:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         */
 551:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)
 552:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         if (0u != (USBFS_1_EP[USBFS_1_EP7].addr & USBFS_1_DIR_IN))
 553:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 554:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         {           
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\cc92Bnqy.s 			page 12


 555:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 556:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             (void) USBFS_1_SIE_EP_BASE.sieEp[USBFS_1_EP7].epCr0;
 557:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 558:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 559:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_GET_EP_TYPE(USBFS_1_EP7) != USBFS_1_EP_TYPE_ISOC)
 560:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 561:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_EP[USBFS_1_EP7].epToggle ^= USBFS_1_EPX_CNT_DATA_TOGGLE;
 562:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 563:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             
 564:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 565:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 566:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * Because last chunk of data is being copied.
 567:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 568:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 569:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             */
 570:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_EP[USBFS_1_EP7].apiEpState = USBFS_1_EVENT_PENDING;
 571:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 572:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 573:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 574:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO))
 575:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 576:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 577:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if(USBFS_1_midi_out_ep == USBFS_1_EP7)
 578:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 579:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_MIDI_OUT_Service();
 580:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 581:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         #endif /* (USBFS_1_ISR_SERVICE_MIDI_OUT) */
 582:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)) */
 583:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 584:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP7_END_USER_CODE` Place your code here */
 585:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 586:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 587:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 588:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_7_ISR_EXIT_CALLBACK
 589:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_7_ISR_ExitCallback();
 590:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_7_ISR_EXIT_CALLBACK) */
 591:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 592:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 593:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 594:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         
 595:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 596:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 597:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 598:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     }
 599:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_EP7_ISR_ACTIVE) */
 600:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 601:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 602:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_EP8_ISR_ACTIVE)
 603:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     /*******************************************************************************
 604:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_EP_8_ISR
 605:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     ****************************************************************************//**
 606:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 607:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Endpoint 8 Interrupt Service Routine
 608:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 609:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 610:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *******************************************************************************/
 611:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_EP_8_ISR)
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\cc92Bnqy.s 			page 13


 612:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     {
 613:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_8_ISR_ENTRY_CALLBACK
 614:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_8_ISR_EntryCallback();
 615:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_8_ISR_ENTRY_CALLBACK) */
 616:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 617:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP8_USER_CODE` Place your code here */
 618:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 619:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 620:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 621:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 622:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 623:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 624:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             uint8 intEn = EA;
 625:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 626:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 627:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 628:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieEpInterruptSource(USBFS_1_SIE_INT_EP8_INTR);
 629:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         
 630:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 631:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 632:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 633:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         */
 634:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)
 635:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         if (0u != (USBFS_1_EP[USBFS_1_EP8].addr & USBFS_1_DIR_IN))
 636:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 637:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 638:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 639:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             (void) USBFS_1_SIE_EP_BASE.sieEp[USBFS_1_EP8].epCr0;
 640:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 641:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 642:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_GET_EP_TYPE(USBFS_1_EP8) != USBFS_1_EP_TYPE_ISOC)
 643:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 644:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_EP[USBFS_1_EP8].epToggle ^= USBFS_1_EPX_CNT_DATA_TOGGLE;
 645:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 646:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 647:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 648:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 649:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * Because last chunk of data is being copied.
 650:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 651:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 652:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             */
 653:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_EP[USBFS_1_EP8].apiEpState = USBFS_1_EVENT_PENDING;
 654:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 655:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 656:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO))
 657:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 658:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 659:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_midi_out_ep == USBFS_1_EP8)
 660:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 661:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_MIDI_OUT_Service();
 662:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 663:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         #endif /* (USBFS_1_ISR_SERVICE_MIDI_OUT) */
 664:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)) */
 665:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 666:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP8_END_USER_CODE` Place your code here */
 667:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 668:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\cc92Bnqy.s 			page 14


 669:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 670:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_8_ISR_EXIT_CALLBACK
 671:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_8_ISR_ExitCallback();
 672:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_8_ISR_EXIT_CALLBACK) */
 673:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 674:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 675:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 676:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         
 677:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 678:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 679:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 680:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     }
 681:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_EP8_ISR_ACTIVE) */
 682:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 683:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 684:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_SOF_ISR_ACTIVE)
 685:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     /*******************************************************************************
 686:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_SOF_ISR
 687:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     ****************************************************************************//**
 688:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 689:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Start of Frame Interrupt Service Routine.
 690:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 691:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 692:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *******************************************************************************/
 693:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_SOF_ISR)
 694:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     {
 695:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_SOF_ISR_ENTRY_CALLBACK
 696:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_SOF_ISR_EntryCallback();
 697:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_SOF_ISR_ENTRY_CALLBACK) */
 698:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 699:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START SOF_USER_CODE` Place your code here */
 700:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 701:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 702:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 703:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieInterruptSource(USBFS_1_INTR_SIE_SOF_INTR);
 704:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 705:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_SOF_ISR_EXIT_CALLBACK
 706:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_SOF_ISR_ExitCallback();
 707:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_SOF_ISR_EXIT_CALLBACK) */
 708:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     }
 709:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_SOF_ISR_ACTIVE) */
 710:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 711:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 712:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_BUS_RESET_ISR_ACTIVE)
 713:.\Generated_Source\PSoC5/USBFS_1_episr.c **** /*******************************************************************************
 714:.\Generated_Source\PSoC5/USBFS_1_episr.c **** * Function Name: USBFS_1_BUS_RESET_ISR
 715:.\Generated_Source\PSoC5/USBFS_1_episr.c **** ****************************************************************************//**
 716:.\Generated_Source\PSoC5/USBFS_1_episr.c **** *
 717:.\Generated_Source\PSoC5/USBFS_1_episr.c **** *  USB Bus Reset Interrupt Service Routine.  Calls _Start with the same
 718:.\Generated_Source\PSoC5/USBFS_1_episr.c **** *  parameters as the last USER call to _Start
 719:.\Generated_Source\PSoC5/USBFS_1_episr.c **** *
 720:.\Generated_Source\PSoC5/USBFS_1_episr.c **** *
 721:.\Generated_Source\PSoC5/USBFS_1_episr.c **** *******************************************************************************/
 722:.\Generated_Source\PSoC5/USBFS_1_episr.c **** CY_ISR(USBFS_1_BUS_RESET_ISR)
 723:.\Generated_Source\PSoC5/USBFS_1_episr.c **** {
  74              		.loc 1 723 0
  75              		.cfi_startproc
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\cc92Bnqy.s 			page 15


  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78 0000 08B5     		push	{r3, lr}
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 3, -8
  81              		.cfi_offset 14, -4
 724:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #ifdef USBFS_1_BUS_RESET_ISR_ENTRY_CALLBACK
 725:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     USBFS_1_BUS_RESET_ISR_EntryCallback();
 726:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_BUS_RESET_ISR_ENTRY_CALLBACK) */
 727:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 728:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     /* `#START BUS_RESET_USER_CODE` Place your code here */
 729:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 730:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     /* `#END` */
 731:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 732:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     USBFS_1_ClearSieInterruptSource(USBFS_1_INTR_SIE_BUS_RESET_INTR);
 733:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 734:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     USBFS_1_ReInitComponent();
  82              		.loc 1 734 0
  83 0002 FFF7FEFF 		bl	USBFS_1_ReInitComponent
  84              	.LVL0:
  85 0006 08BD     		pop	{r3, pc}
  86              		.cfi_endproc
  87              	.LFE1:
  88              		.size	USBFS_1_BUS_RESET_ISR, .-USBFS_1_BUS_RESET_ISR
  89              		.text
  90              	.Letext0:
  91              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
  92              		.file 3 ".\\Generated_Source\\PSoC5\\USBFS_1.h"
  93              		.file 4 ".\\Generated_Source\\PSoC5\\USBFS_1_pvt.h"
  94              		.section	.debug_info,"",%progbits
  95              	.Ldebug_info0:
  96 0000 0C020000 		.4byte	0x20c
  97 0004 0400     		.2byte	0x4
  98 0006 00000000 		.4byte	.Ldebug_abbrev0
  99 000a 04       		.byte	0x4
 100 000b 01       		.uleb128 0x1
 101 000c D4000000 		.4byte	.LASF32
 102 0010 01       		.byte	0x1
 103 0011 D7010000 		.4byte	.LASF33
 104 0015 1A020000 		.4byte	.LASF34
 105 0019 00000000 		.4byte	.Ldebug_ranges0+0
 106 001d 00000000 		.4byte	0
 107 0021 00000000 		.4byte	.Ldebug_line0
 108 0025 02       		.uleb128 0x2
 109 0026 01       		.byte	0x1
 110 0027 06       		.byte	0x6
 111 0028 8C020000 		.4byte	.LASF0
 112 002c 02       		.uleb128 0x2
 113 002d 01       		.byte	0x1
 114 002e 08       		.byte	0x8
 115 002f 57000000 		.4byte	.LASF1
 116 0033 02       		.uleb128 0x2
 117 0034 02       		.byte	0x2
 118 0035 05       		.byte	0x5
 119 0036 10020000 		.4byte	.LASF2
 120 003a 02       		.uleb128 0x2
 121 003b 02       		.byte	0x2
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\cc92Bnqy.s 			page 16


 122 003c 07       		.byte	0x7
 123 003d 17000000 		.4byte	.LASF3
 124 0041 02       		.uleb128 0x2
 125 0042 04       		.byte	0x4
 126 0043 05       		.byte	0x5
 127 0044 78020000 		.4byte	.LASF4
 128 0048 02       		.uleb128 0x2
 129 0049 04       		.byte	0x4
 130 004a 07       		.byte	0x7
 131 004b 6A000000 		.4byte	.LASF5
 132 004f 02       		.uleb128 0x2
 133 0050 08       		.byte	0x8
 134 0051 05       		.byte	0x5
 135 0052 C9010000 		.4byte	.LASF6
 136 0056 02       		.uleb128 0x2
 137 0057 08       		.byte	0x8
 138 0058 07       		.byte	0x7
 139 0059 80010000 		.4byte	.LASF7
 140 005d 03       		.uleb128 0x3
 141 005e 04       		.byte	0x4
 142 005f 05       		.byte	0x5
 143 0060 696E7400 		.ascii	"int\000"
 144 0064 02       		.uleb128 0x2
 145 0065 04       		.byte	0x4
 146 0066 07       		.byte	0x7
 147 0067 62010000 		.4byte	.LASF8
 148 006b 04       		.uleb128 0x4
 149 006c 68020000 		.4byte	.LASF9
 150 0070 02       		.byte	0x2
 151 0071 3801     		.2byte	0x138
 152 0073 2C000000 		.4byte	0x2c
 153 0077 04       		.uleb128 0x4
 154 0078 C2000000 		.4byte	.LASF10
 155 007c 02       		.byte	0x2
 156 007d 3901     		.2byte	0x139
 157 007f 3A000000 		.4byte	0x3a
 158 0083 02       		.uleb128 0x2
 159 0084 04       		.byte	0x4
 160 0085 04       		.byte	0x4
 161 0086 11000000 		.4byte	.LASF11
 162 008a 02       		.uleb128 0x2
 163 008b 08       		.byte	0x8
 164 008c 04       		.byte	0x4
 165 008d 9E000000 		.4byte	.LASF12
 166 0091 02       		.uleb128 0x2
 167 0092 01       		.byte	0x1
 168 0093 08       		.byte	0x8
 169 0094 00020000 		.4byte	.LASF13
 170 0098 04       		.uleb128 0x4
 171 0099 65000000 		.4byte	.LASF14
 172 009d 02       		.byte	0x2
 173 009e E201     		.2byte	0x1e2
 174 00a0 A4000000 		.4byte	0xa4
 175 00a4 05       		.uleb128 0x5
 176 00a5 6B000000 		.4byte	0x6b
 177 00a9 02       		.uleb128 0x2
 178 00aa 04       		.byte	0x4
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\cc92Bnqy.s 			page 17


 179 00ab 07       		.byte	0x7
 180 00ac B9010000 		.4byte	.LASF15
 181 00b0 06       		.uleb128 0x6
 182 00b1 0C       		.byte	0xc
 183 00b2 03       		.byte	0x3
 184 00b3 92       		.byte	0x92
 185 00b4 25010000 		.4byte	0x125
 186 00b8 07       		.uleb128 0x7
 187 00b9 A5000000 		.4byte	.LASF16
 188 00bd 03       		.byte	0x3
 189 00be 94       		.byte	0x94
 190 00bf 6B000000 		.4byte	0x6b
 191 00c3 00       		.byte	0
 192 00c4 07       		.uleb128 0x7
 193 00c5 C9000000 		.4byte	.LASF17
 194 00c9 03       		.byte	0x3
 195 00ca 95       		.byte	0x95
 196 00cb 6B000000 		.4byte	0x6b
 197 00cf 01       		.byte	0x1
 198 00d0 07       		.uleb128 0x7
 199 00d1 97010000 		.4byte	.LASF18
 200 00d5 03       		.byte	0x3
 201 00d6 96       		.byte	0x96
 202 00d7 6B000000 		.4byte	0x6b
 203 00db 02       		.byte	0x2
 204 00dc 07       		.uleb128 0x7
 205 00dd 4E000000 		.4byte	.LASF19
 206 00e1 03       		.byte	0x3
 207 00e2 97       		.byte	0x97
 208 00e3 6B000000 		.4byte	0x6b
 209 00e7 03       		.byte	0x3
 210 00e8 07       		.uleb128 0x7
 211 00e9 7C000000 		.4byte	.LASF20
 212 00ed 03       		.byte	0x3
 213 00ee 98       		.byte	0x98
 214 00ef 6B000000 		.4byte	0x6b
 215 00f3 04       		.byte	0x4
 216 00f4 07       		.uleb128 0x7
 217 00f5 C2010000 		.4byte	.LASF21
 218 00f9 03       		.byte	0x3
 219 00fa 99       		.byte	0x99
 220 00fb 6B000000 		.4byte	0x6b
 221 00ff 05       		.byte	0x5
 222 0100 07       		.uleb128 0x7
 223 0101 81020000 		.4byte	.LASF22
 224 0105 03       		.byte	0x3
 225 0106 9A       		.byte	0x9a
 226 0107 77000000 		.4byte	0x77
 227 010b 06       		.byte	0x6
 228 010c 07       		.uleb128 0x7
 229 010d 05020000 		.4byte	.LASF23
 230 0111 03       		.byte	0x3
 231 0112 9B       		.byte	0x9b
 232 0113 77000000 		.4byte	0x77
 233 0117 08       		.byte	0x8
 234 0118 07       		.uleb128 0x7
 235 0119 6E020000 		.4byte	.LASF24
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\cc92Bnqy.s 			page 18


 236 011d 03       		.byte	0x3
 237 011e 9C       		.byte	0x9c
 238 011f 6B000000 		.4byte	0x6b
 239 0123 0A       		.byte	0xa
 240 0124 00       		.byte	0
 241 0125 08       		.uleb128 0x8
 242 0126 87000000 		.4byte	.LASF25
 243 012a 03       		.byte	0x3
 244 012b 9D       		.byte	0x9d
 245 012c B0000000 		.4byte	0xb0
 246 0130 06       		.uleb128 0x6
 247 0131 10       		.byte	0x10
 248 0132 03       		.byte	0x3
 249 0133 D9       		.byte	0xd9
 250 0134 69010000 		.4byte	0x169
 251 0138 07       		.uleb128 0x7
 252 0139 40000000 		.4byte	.LASF26
 253 013d 03       		.byte	0x3
 254 013e DB       		.byte	0xdb
 255 013f 6B000000 		.4byte	0x6b
 256 0143 00       		.byte	0
 257 0144 07       		.uleb128 0x7
 258 0145 47000000 		.4byte	.LASF27
 259 0149 03       		.byte	0x3
 260 014a DC       		.byte	0xdc
 261 014b 6B000000 		.4byte	0x6b
 262 014f 01       		.byte	0x1
 263 0150 07       		.uleb128 0x7
 264 0151 0B000000 		.4byte	.LASF28
 265 0155 03       		.byte	0x3
 266 0156 DD       		.byte	0xdd
 267 0157 6B000000 		.4byte	0x6b
 268 015b 02       		.byte	0x2
 269 015c 09       		.uleb128 0x9
 270 015d 67617000 		.ascii	"gap\000"
 271 0161 03       		.byte	0x3
 272 0162 DE       		.byte	0xde
 273 0163 69010000 		.4byte	0x169
 274 0167 03       		.byte	0x3
 275 0168 00       		.byte	0
 276 0169 0A       		.uleb128 0xa
 277 016a 6B000000 		.4byte	0x6b
 278 016e 79010000 		.4byte	0x179
 279 0172 0B       		.uleb128 0xb
 280 0173 A9000000 		.4byte	0xa9
 281 0177 0C       		.byte	0xc
 282 0178 00       		.byte	0
 283 0179 08       		.uleb128 0x8
 284 017a AC000000 		.4byte	.LASF29
 285 017e 03       		.byte	0x3
 286 017f DF       		.byte	0xdf
 287 0180 30010000 		.4byte	0x130
 288 0184 0C       		.uleb128 0xc
 289 0185 90       		.byte	0x90
 290 0186 03       		.byte	0x3
 291 0187 1301     		.2byte	0x113
 292 0189 9B010000 		.4byte	0x19b
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\cc92Bnqy.s 			page 19


 293 018d 0D       		.uleb128 0xd
 294 018e 81000000 		.4byte	.LASF30
 295 0192 03       		.byte	0x3
 296 0193 1501     		.2byte	0x115
 297 0195 9B010000 		.4byte	0x19b
 298 0199 00       		.byte	0
 299 019a 00       		.byte	0
 300 019b 0A       		.uleb128 0xa
 301 019c 79010000 		.4byte	0x179
 302 01a0 AB010000 		.4byte	0x1ab
 303 01a4 0B       		.uleb128 0xb
 304 01a5 A9000000 		.4byte	0xa9
 305 01a9 08       		.byte	0x8
 306 01aa 00       		.byte	0
 307 01ab 04       		.uleb128 0x4
 308 01ac 98020000 		.4byte	.LASF31
 309 01b0 03       		.byte	0x3
 310 01b1 1601     		.2byte	0x116
 311 01b3 84010000 		.4byte	0x184
 312 01b7 0E       		.uleb128 0xe
 313 01b8 6F010000 		.4byte	.LASF35
 314 01bc 01       		.byte	0x1
 315 01bd 25       		.byte	0x25
 316 01be 00000000 		.4byte	.LFB0
 317 01c2 38000000 		.4byte	.LFE0-.LFB0
 318 01c6 01       		.uleb128 0x1
 319 01c7 9C       		.byte	0x9c
 320 01c8 0F       		.uleb128 0xf
 321 01c9 2A000000 		.4byte	.LASF36
 322 01cd 01       		.byte	0x1
 323 01ce D202     		.2byte	0x2d2
 324 01d0 00000000 		.4byte	.LFB1
 325 01d4 08000000 		.4byte	.LFE1-.LFB1
 326 01d8 01       		.uleb128 0x1
 327 01d9 9C       		.byte	0x9c
 328 01da E8010000 		.4byte	0x1e8
 329 01de 10       		.uleb128 0x10
 330 01df 06000000 		.4byte	.LVL0
 331 01e3 08020000 		.4byte	0x208
 332 01e7 00       		.byte	0
 333 01e8 0A       		.uleb128 0xa
 334 01e9 25010000 		.4byte	0x125
 335 01ed F8010000 		.4byte	0x1f8
 336 01f1 0B       		.uleb128 0xb
 337 01f2 A9000000 		.4byte	0xa9
 338 01f6 08       		.byte	0x8
 339 01f7 00       		.byte	0
 340 01f8 11       		.uleb128 0x11
 341 01f9 00000000 		.4byte	.LASF37
 342 01fd 04       		.byte	0x4
 343 01fe 83       		.byte	0x83
 344 01ff 03020000 		.4byte	0x203
 345 0203 05       		.uleb128 0x5
 346 0204 E8010000 		.4byte	0x1e8
 347 0208 12       		.uleb128 0x12
 348 0209 A1010000 		.4byte	.LASF38
 349 020d 04       		.byte	0x4
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\cc92Bnqy.s 			page 20


 350 020e AE       		.byte	0xae
 351 020f 00       		.byte	0
 352              		.section	.debug_abbrev,"",%progbits
 353              	.Ldebug_abbrev0:
 354 0000 01       		.uleb128 0x1
 355 0001 11       		.uleb128 0x11
 356 0002 01       		.byte	0x1
 357 0003 25       		.uleb128 0x25
 358 0004 0E       		.uleb128 0xe
 359 0005 13       		.uleb128 0x13
 360 0006 0B       		.uleb128 0xb
 361 0007 03       		.uleb128 0x3
 362 0008 0E       		.uleb128 0xe
 363 0009 1B       		.uleb128 0x1b
 364 000a 0E       		.uleb128 0xe
 365 000b 55       		.uleb128 0x55
 366 000c 17       		.uleb128 0x17
 367 000d 11       		.uleb128 0x11
 368 000e 01       		.uleb128 0x1
 369 000f 10       		.uleb128 0x10
 370 0010 17       		.uleb128 0x17
 371 0011 00       		.byte	0
 372 0012 00       		.byte	0
 373 0013 02       		.uleb128 0x2
 374 0014 24       		.uleb128 0x24
 375 0015 00       		.byte	0
 376 0016 0B       		.uleb128 0xb
 377 0017 0B       		.uleb128 0xb
 378 0018 3E       		.uleb128 0x3e
 379 0019 0B       		.uleb128 0xb
 380 001a 03       		.uleb128 0x3
 381 001b 0E       		.uleb128 0xe
 382 001c 00       		.byte	0
 383 001d 00       		.byte	0
 384 001e 03       		.uleb128 0x3
 385 001f 24       		.uleb128 0x24
 386 0020 00       		.byte	0
 387 0021 0B       		.uleb128 0xb
 388 0022 0B       		.uleb128 0xb
 389 0023 3E       		.uleb128 0x3e
 390 0024 0B       		.uleb128 0xb
 391 0025 03       		.uleb128 0x3
 392 0026 08       		.uleb128 0x8
 393 0027 00       		.byte	0
 394 0028 00       		.byte	0
 395 0029 04       		.uleb128 0x4
 396 002a 16       		.uleb128 0x16
 397 002b 00       		.byte	0
 398 002c 03       		.uleb128 0x3
 399 002d 0E       		.uleb128 0xe
 400 002e 3A       		.uleb128 0x3a
 401 002f 0B       		.uleb128 0xb
 402 0030 3B       		.uleb128 0x3b
 403 0031 05       		.uleb128 0x5
 404 0032 49       		.uleb128 0x49
 405 0033 13       		.uleb128 0x13
 406 0034 00       		.byte	0
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\cc92Bnqy.s 			page 21


 407 0035 00       		.byte	0
 408 0036 05       		.uleb128 0x5
 409 0037 35       		.uleb128 0x35
 410 0038 00       		.byte	0
 411 0039 49       		.uleb128 0x49
 412 003a 13       		.uleb128 0x13
 413 003b 00       		.byte	0
 414 003c 00       		.byte	0
 415 003d 06       		.uleb128 0x6
 416 003e 13       		.uleb128 0x13
 417 003f 01       		.byte	0x1
 418 0040 0B       		.uleb128 0xb
 419 0041 0B       		.uleb128 0xb
 420 0042 3A       		.uleb128 0x3a
 421 0043 0B       		.uleb128 0xb
 422 0044 3B       		.uleb128 0x3b
 423 0045 0B       		.uleb128 0xb
 424 0046 01       		.uleb128 0x1
 425 0047 13       		.uleb128 0x13
 426 0048 00       		.byte	0
 427 0049 00       		.byte	0
 428 004a 07       		.uleb128 0x7
 429 004b 0D       		.uleb128 0xd
 430 004c 00       		.byte	0
 431 004d 03       		.uleb128 0x3
 432 004e 0E       		.uleb128 0xe
 433 004f 3A       		.uleb128 0x3a
 434 0050 0B       		.uleb128 0xb
 435 0051 3B       		.uleb128 0x3b
 436 0052 0B       		.uleb128 0xb
 437 0053 49       		.uleb128 0x49
 438 0054 13       		.uleb128 0x13
 439 0055 38       		.uleb128 0x38
 440 0056 0B       		.uleb128 0xb
 441 0057 00       		.byte	0
 442 0058 00       		.byte	0
 443 0059 08       		.uleb128 0x8
 444 005a 16       		.uleb128 0x16
 445 005b 00       		.byte	0
 446 005c 03       		.uleb128 0x3
 447 005d 0E       		.uleb128 0xe
 448 005e 3A       		.uleb128 0x3a
 449 005f 0B       		.uleb128 0xb
 450 0060 3B       		.uleb128 0x3b
 451 0061 0B       		.uleb128 0xb
 452 0062 49       		.uleb128 0x49
 453 0063 13       		.uleb128 0x13
 454 0064 00       		.byte	0
 455 0065 00       		.byte	0
 456 0066 09       		.uleb128 0x9
 457 0067 0D       		.uleb128 0xd
 458 0068 00       		.byte	0
 459 0069 03       		.uleb128 0x3
 460 006a 08       		.uleb128 0x8
 461 006b 3A       		.uleb128 0x3a
 462 006c 0B       		.uleb128 0xb
 463 006d 3B       		.uleb128 0x3b
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\cc92Bnqy.s 			page 22


 464 006e 0B       		.uleb128 0xb
 465 006f 49       		.uleb128 0x49
 466 0070 13       		.uleb128 0x13
 467 0071 38       		.uleb128 0x38
 468 0072 0B       		.uleb128 0xb
 469 0073 00       		.byte	0
 470 0074 00       		.byte	0
 471 0075 0A       		.uleb128 0xa
 472 0076 01       		.uleb128 0x1
 473 0077 01       		.byte	0x1
 474 0078 49       		.uleb128 0x49
 475 0079 13       		.uleb128 0x13
 476 007a 01       		.uleb128 0x1
 477 007b 13       		.uleb128 0x13
 478 007c 00       		.byte	0
 479 007d 00       		.byte	0
 480 007e 0B       		.uleb128 0xb
 481 007f 21       		.uleb128 0x21
 482 0080 00       		.byte	0
 483 0081 49       		.uleb128 0x49
 484 0082 13       		.uleb128 0x13
 485 0083 2F       		.uleb128 0x2f
 486 0084 0B       		.uleb128 0xb
 487 0085 00       		.byte	0
 488 0086 00       		.byte	0
 489 0087 0C       		.uleb128 0xc
 490 0088 13       		.uleb128 0x13
 491 0089 01       		.byte	0x1
 492 008a 0B       		.uleb128 0xb
 493 008b 0B       		.uleb128 0xb
 494 008c 3A       		.uleb128 0x3a
 495 008d 0B       		.uleb128 0xb
 496 008e 3B       		.uleb128 0x3b
 497 008f 05       		.uleb128 0x5
 498 0090 01       		.uleb128 0x1
 499 0091 13       		.uleb128 0x13
 500 0092 00       		.byte	0
 501 0093 00       		.byte	0
 502 0094 0D       		.uleb128 0xd
 503 0095 0D       		.uleb128 0xd
 504 0096 00       		.byte	0
 505 0097 03       		.uleb128 0x3
 506 0098 0E       		.uleb128 0xe
 507 0099 3A       		.uleb128 0x3a
 508 009a 0B       		.uleb128 0xb
 509 009b 3B       		.uleb128 0x3b
 510 009c 05       		.uleb128 0x5
 511 009d 49       		.uleb128 0x49
 512 009e 13       		.uleb128 0x13
 513 009f 38       		.uleb128 0x38
 514 00a0 0B       		.uleb128 0xb
 515 00a1 00       		.byte	0
 516 00a2 00       		.byte	0
 517 00a3 0E       		.uleb128 0xe
 518 00a4 2E       		.uleb128 0x2e
 519 00a5 00       		.byte	0
 520 00a6 3F       		.uleb128 0x3f
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\cc92Bnqy.s 			page 23


 521 00a7 19       		.uleb128 0x19
 522 00a8 03       		.uleb128 0x3
 523 00a9 0E       		.uleb128 0xe
 524 00aa 3A       		.uleb128 0x3a
 525 00ab 0B       		.uleb128 0xb
 526 00ac 3B       		.uleb128 0x3b
 527 00ad 0B       		.uleb128 0xb
 528 00ae 27       		.uleb128 0x27
 529 00af 19       		.uleb128 0x19
 530 00b0 11       		.uleb128 0x11
 531 00b1 01       		.uleb128 0x1
 532 00b2 12       		.uleb128 0x12
 533 00b3 06       		.uleb128 0x6
 534 00b4 40       		.uleb128 0x40
 535 00b5 18       		.uleb128 0x18
 536 00b6 9742     		.uleb128 0x2117
 537 00b8 19       		.uleb128 0x19
 538 00b9 00       		.byte	0
 539 00ba 00       		.byte	0
 540 00bb 0F       		.uleb128 0xf
 541 00bc 2E       		.uleb128 0x2e
 542 00bd 01       		.byte	0x1
 543 00be 3F       		.uleb128 0x3f
 544 00bf 19       		.uleb128 0x19
 545 00c0 03       		.uleb128 0x3
 546 00c1 0E       		.uleb128 0xe
 547 00c2 3A       		.uleb128 0x3a
 548 00c3 0B       		.uleb128 0xb
 549 00c4 3B       		.uleb128 0x3b
 550 00c5 05       		.uleb128 0x5
 551 00c6 27       		.uleb128 0x27
 552 00c7 19       		.uleb128 0x19
 553 00c8 11       		.uleb128 0x11
 554 00c9 01       		.uleb128 0x1
 555 00ca 12       		.uleb128 0x12
 556 00cb 06       		.uleb128 0x6
 557 00cc 40       		.uleb128 0x40
 558 00cd 18       		.uleb128 0x18
 559 00ce 9742     		.uleb128 0x2117
 560 00d0 19       		.uleb128 0x19
 561 00d1 01       		.uleb128 0x1
 562 00d2 13       		.uleb128 0x13
 563 00d3 00       		.byte	0
 564 00d4 00       		.byte	0
 565 00d5 10       		.uleb128 0x10
 566 00d6 898201   		.uleb128 0x4109
 567 00d9 00       		.byte	0
 568 00da 11       		.uleb128 0x11
 569 00db 01       		.uleb128 0x1
 570 00dc 31       		.uleb128 0x31
 571 00dd 13       		.uleb128 0x13
 572 00de 00       		.byte	0
 573 00df 00       		.byte	0
 574 00e0 11       		.uleb128 0x11
 575 00e1 34       		.uleb128 0x34
 576 00e2 00       		.byte	0
 577 00e3 03       		.uleb128 0x3
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\cc92Bnqy.s 			page 24


 578 00e4 0E       		.uleb128 0xe
 579 00e5 3A       		.uleb128 0x3a
 580 00e6 0B       		.uleb128 0xb
 581 00e7 3B       		.uleb128 0x3b
 582 00e8 0B       		.uleb128 0xb
 583 00e9 49       		.uleb128 0x49
 584 00ea 13       		.uleb128 0x13
 585 00eb 3F       		.uleb128 0x3f
 586 00ec 19       		.uleb128 0x19
 587 00ed 3C       		.uleb128 0x3c
 588 00ee 19       		.uleb128 0x19
 589 00ef 00       		.byte	0
 590 00f0 00       		.byte	0
 591 00f1 12       		.uleb128 0x12
 592 00f2 2E       		.uleb128 0x2e
 593 00f3 00       		.byte	0
 594 00f4 3F       		.uleb128 0x3f
 595 00f5 19       		.uleb128 0x19
 596 00f6 03       		.uleb128 0x3
 597 00f7 0E       		.uleb128 0xe
 598 00f8 3A       		.uleb128 0x3a
 599 00f9 0B       		.uleb128 0xb
 600 00fa 3B       		.uleb128 0x3b
 601 00fb 0B       		.uleb128 0xb
 602 00fc 27       		.uleb128 0x27
 603 00fd 19       		.uleb128 0x19
 604 00fe 3C       		.uleb128 0x3c
 605 00ff 19       		.uleb128 0x19
 606 0100 00       		.byte	0
 607 0101 00       		.byte	0
 608 0102 00       		.byte	0
 609              		.section	.debug_aranges,"",%progbits
 610 0000 24000000 		.4byte	0x24
 611 0004 0200     		.2byte	0x2
 612 0006 00000000 		.4byte	.Ldebug_info0
 613 000a 04       		.byte	0x4
 614 000b 00       		.byte	0
 615 000c 0000     		.2byte	0
 616 000e 0000     		.2byte	0
 617 0010 00000000 		.4byte	.LFB0
 618 0014 38000000 		.4byte	.LFE0-.LFB0
 619 0018 00000000 		.4byte	.LFB1
 620 001c 08000000 		.4byte	.LFE1-.LFB1
 621 0020 00000000 		.4byte	0
 622 0024 00000000 		.4byte	0
 623              		.section	.debug_ranges,"",%progbits
 624              	.Ldebug_ranges0:
 625 0000 00000000 		.4byte	.LFB0
 626 0004 38000000 		.4byte	.LFE0
 627 0008 00000000 		.4byte	.LFB1
 628 000c 08000000 		.4byte	.LFE1
 629 0010 00000000 		.4byte	0
 630 0014 00000000 		.4byte	0
 631              		.section	.debug_line,"",%progbits
 632              	.Ldebug_line0:
 633 0000 9D000000 		.section	.debug_str,"MS",%progbits,1
 633      02006A00 
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\cc92Bnqy.s 			page 25


 633      00000201 
 633      FB0E0D00 
 633      01010101 
 634              	.LASF37:
 635 0000 55534246 		.ascii	"USBFS_1_EP\000"
 635      535F315F 
 635      455000
 636              	.LASF28:
 637 000b 65704372 		.ascii	"epCr0\000"
 637      3000
 638              	.LASF11:
 639 0011 666C6F61 		.ascii	"float\000"
 639      7400
 640              	.LASF3:
 641 0017 73686F72 		.ascii	"short unsigned int\000"
 641      7420756E 
 641      7369676E 
 641      65642069 
 641      6E7400
 642              	.LASF36:
 643 002a 55534246 		.ascii	"USBFS_1_BUS_RESET_ISR\000"
 643      535F315F 
 643      4255535F 
 643      52455345 
 643      545F4953 
 644              	.LASF26:
 645 0040 6570436E 		.ascii	"epCnt0\000"
 645      743000
 646              	.LASF27:
 647 0047 6570436E 		.ascii	"epCnt1\000"
 647      743100
 648              	.LASF19:
 649 004e 6570546F 		.ascii	"epToggle\000"
 649      67676C65 
 649      00
 650              	.LASF1:
 651 0057 756E7369 		.ascii	"unsigned char\000"
 651      676E6564 
 651      20636861 
 651      7200
 652              	.LASF14:
 653 0065 72656738 		.ascii	"reg8\000"
 653      00
 654              	.LASF5:
 655 006a 6C6F6E67 		.ascii	"long unsigned int\000"
 655      20756E73 
 655      69676E65 
 655      6420696E 
 655      7400
 656              	.LASF20:
 657 007c 61646472 		.ascii	"addr\000"
 657      00
 658              	.LASF30:
 659 0081 73696545 		.ascii	"sieEp\000"
 659      7000
 660              	.LASF25:
 661 0087 545F5553 		.ascii	"T_USBFS_1_EP_CTL_BLOCK\000"
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\cc92Bnqy.s 			page 26


 661      4246535F 
 661      315F4550 
 661      5F43544C 
 661      5F424C4F 
 662              	.LASF12:
 663 009e 646F7562 		.ascii	"double\000"
 663      6C6500
 664              	.LASF16:
 665 00a5 61747472 		.ascii	"attrib\000"
 665      696200
 666              	.LASF29:
 667 00ac 55534246 		.ascii	"USBFS_1_sie_ep_struct\000"
 667      535F315F 
 667      7369655F 
 667      65705F73 
 667      74727563 
 668              	.LASF10:
 669 00c2 75696E74 		.ascii	"uint16\000"
 669      313600
 670              	.LASF17:
 671 00c9 61706945 		.ascii	"apiEpState\000"
 671      70537461 
 671      746500
 672              	.LASF32:
 673 00d4 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 673      4320342E 
 673      392E3320 
 673      32303135 
 673      30333033 
 674 0107 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 674      20726576 
 674      6973696F 
 674      6E203232 
 674      31323230 
 675 013a 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 675      66756E63 
 675      74696F6E 
 675      2D736563 
 675      74696F6E 
 676              	.LASF8:
 677 0162 756E7369 		.ascii	"unsigned int\000"
 677      676E6564 
 677      20696E74 
 677      00
 678              	.LASF35:
 679 016f 55534246 		.ascii	"USBFS_1_EP_1_ISR\000"
 679      535F315F 
 679      45505F31 
 679      5F495352 
 679      00
 680              	.LASF7:
 681 0180 6C6F6E67 		.ascii	"long long unsigned int\000"
 681      206C6F6E 
 681      6720756E 
 681      7369676E 
 681      65642069 
 682              	.LASF18:
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\cc92Bnqy.s 			page 27


 683 0197 68774570 		.ascii	"hwEpState\000"
 683      53746174 
 683      6500
 684              	.LASF38:
 685 01a1 55534246 		.ascii	"USBFS_1_ReInitComponent\000"
 685      535F315F 
 685      5265496E 
 685      6974436F 
 685      6D706F6E 
 686              	.LASF15:
 687 01b9 73697A65 		.ascii	"sizetype\000"
 687      74797065 
 687      00
 688              	.LASF21:
 689 01c2 65704D6F 		.ascii	"epMode\000"
 689      646500
 690              	.LASF6:
 691 01c9 6C6F6E67 		.ascii	"long long int\000"
 691      206C6F6E 
 691      6720696E 
 691      7400
 692              	.LASF33:
 693 01d7 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\USBFS_1_episr.c\000"
 693      6E657261 
 693      7465645F 
 693      536F7572 
 693      63655C50 
 694              	.LASF13:
 695 0200 63686172 		.ascii	"char\000"
 695      00
 696              	.LASF23:
 697 0205 62756666 		.ascii	"bufferSize\000"
 697      65725369 
 697      7A6500
 698              	.LASF2:
 699 0210 73686F72 		.ascii	"short int\000"
 699      7420696E 
 699      7400
 700              	.LASF34:
 701 021a 433A5C44 		.ascii	"C:\\Documents and Settings\\Admin\\Desktop\\NeXTsou"
 701      6F63756D 
 701      656E7473 
 701      20616E64 
 701      20536574 
 702 0249 6E64626F 		.ascii	"ndbox staging area\\Vomit.cydsn\000"
 702      78207374 
 702      6167696E 
 702      67206172 
 702      65615C56 
 703              	.LASF9:
 704 0268 75696E74 		.ascii	"uint8\000"
 704      3800
 705              	.LASF24:
 706 026e 696E7465 		.ascii	"interface\000"
 706      72666163 
 706      6500
 707              	.LASF4:
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\cc92Bnqy.s 			page 28


 708 0278 6C6F6E67 		.ascii	"long int\000"
 708      20696E74 
 708      00
 709              	.LASF22:
 710 0281 62756666 		.ascii	"buffOffset\000"
 710      4F666673 
 710      657400
 711              	.LASF0:
 712 028c 7369676E 		.ascii	"signed char\000"
 712      65642063 
 712      68617200 
 713              	.LASF31:
 714 0298 55534246 		.ascii	"USBFS_1_sie_eps_struct\000"
 714      535F315F 
 714      7369655F 
 714      6570735F 
 714      73747275 
 715              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
